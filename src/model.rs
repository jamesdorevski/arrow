use chrono::{DateTime, Duration, Local};

pub struct Project {
    pub id: u32,
    pub name: String,
    pub description: Option<String>,
    pub created: DateTime<Local>,
    pub updated: DateTime<Local>,
    pub duration: u32
}

impl Project {
    pub fn new(
        name: String,
        description: Option<String>,
        created: DateTime<Local>,
        updated: DateTime<Local>,
    ) -> Self {
        Project {
            id: 0, // ID is generated by db  
            name,
            description,
            created,
            updated,
            duration: 0
        }
    }

    pub fn load(
        id: u32,
        name: String,
        description: Option<String>,
        created: DateTime<Local>,
        updated: DateTime<Local>,
        duration: u32
    ) -> Self {
        Project {
            id,
            name,
            description,
            created,
            updated,
            duration
        }
    }
}

pub struct Log {
    pub id: u32,
    pub proj_id: u32,
    pub message: String,
    pub start: DateTime<Local>,
    pub end: DateTime<Local>,
}

impl Log {
    pub fn new(
        id: u32,
        proj_id: u32,
        message: String,
        start: DateTime<Local>,
        end: DateTime<Local>,
    ) -> Self {
        Log {
            id, // db-generated
            proj_id,
            message,
            start,
            end,
        }
    }
}
